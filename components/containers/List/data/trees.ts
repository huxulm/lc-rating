import ProblemCategory from "@components/ProblemCatetory";

export default{
    "title": "分享丨【算法题单】链表、二叉树与回溯（前后指针/快慢指针/DFS/BFS/直径/LCA/一般树）",
    "summary": "",
    "src": "",
    "original_src": "https://leetcode.cn/circle/discuss/K0n2gO",
    "sort": 0,
    "isLeaf": false,
    "solution": "",
    "score": 0,
    "leafChild": [],
    "nonLeafChild": [
        {
            "title": "介绍",
            "summary": "<img src=\"https://pic.leetcode.cn/1723340796-CzPFMU-meme-tree-11.jpg\" alt=\"链表题单 二叉树题单 链表题目 二叉树题目 回溯题单 回溯题目 灵茶山艾府 灵神\" style=\"width: 100%;\"><br>",
            "src": "",
            "original_src": "",
            "sort": 0,
            "isLeaf": false,
            "solution": "",
            "score": 0,
            "leafChild": [],
            "nonLeafChild": [
                {
                    "title": "一、链表",
                    "summary": "> 注：由于周赛中的链表题可以转成数组处理，难度比直接处理链表低，故不标明难度分。<br>带着问题去做下面的题目：<br>1. 在什么情况下，要用到哨兵节点（dummy node）？<br>2. 在什么情况下，循环条件要写 `while (node != null)`？什么情况下要写 `while (node.next != null)`？<br>",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [],
                    "nonLeafChild": [
                        {
                            "title": "§1.1 遍历链表",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "1290. 二进制链表转整数",
                                    "summary": "",
                                    "src": "/convert-binary-number-in-a-linked-list-to-integer/",
                                    "original_src": "https://leetcode.cn/problems/convert-binary-number-in-a-linked-list-to-integer/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1151.3534799042,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2058. 找出临界点之间的最小和最大距离",
                                    "summary": "",
                                    "src": "/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/",
                                    "original_src": "https://leetcode.cn/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1310.9129840277,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2181. 合并零之间的节点",
                                    "summary": "",
                                    "src": "/merge-nodes-in-between-zeros/",
                                    "original_src": "https://leetcode.cn/problems/merge-nodes-in-between-zeros/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1333.192050397,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "725. 分隔链表",
                                    "summary": "",
                                    "src": "/split-linked-list-in-parts/",
                                    "original_src": "https://leetcode.cn/problems/split-linked-list-in-parts/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "817. 链表组件",
                                    "summary": "",
                                    "src": "/linked-list-components/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-components/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1428.712905903,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3062. 链表游戏的获胜者",
                                    "summary": "",
                                    "src": "/winner-of-the-linked-list-game/",
                                    "original_src": "https://leetcode.cn/problems/winner-of-the-linked-list-game/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "3063. 链表频率",
                                    "summary": "",
                                    "src": "/linked-list-frequency/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-frequency/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.2 删除节点",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1VP4y1Q71e/\">视频讲解【基础算法精讲 08】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "203. 移除链表元素",
                                    "summary": "",
                                    "src": "/remove-linked-list-elements/",
                                    "original_src": "https://leetcode.cn/problems/remove-linked-list-elements/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3217. 从链表中移除在数组中存在的节点",
                                    "summary": "",
                                    "src": "/delete-nodes-from-linked-list-present-in-array/",
                                    "original_src": "https://leetcode.cn/problems/delete-nodes-from-linked-list-present-in-array/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1341.7231008143,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "83. 删除排序链表中的重复元素",
                                    "summary": "",
                                    "src": "/remove-duplicates-from-sorted-list/",
                                    "original_src": "https://leetcode.cn/problems/remove-duplicates-from-sorted-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "82. 删除排序链表中的重复元素 II",
                                    "summary": "",
                                    "src": "/remove-duplicates-from-sorted-list-ii/",
                                    "original_src": "https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "237. 删除链表中的节点",
                                    "summary": "",
                                    "src": "/delete-node-in-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/delete-node-in-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1669. 合并两个链表",
                                    "summary": "",
                                    "src": "/merge-in-between-linked-lists/",
                                    "original_src": "https://leetcode.cn/problems/merge-in-between-linked-lists/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1428.1443796872,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2487. 从链表中移除节点",
                                    "summary": "",
                                    "src": "/remove-nodes-from-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/remove-nodes-from-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1454.5942017003,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1836. 从未排序的链表中移除重复元素",
                                    "summary": "",
                                    "src": "/remove-duplicates-from-an-unsorted-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/remove-duplicates-from-an-unsorted-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.3 插入节点",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2807. 在链表中插入最大公约数",
                                    "summary": "",
                                    "src": "/insert-greatest-common-divisors-in-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/insert-greatest-common-divisors-in-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1279.0301521682,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "147. 对链表进行插入排序",
                                    "summary": "",
                                    "src": "/insertion-sort-list/",
                                    "original_src": "https://leetcode.cn/problems/insertion-sort-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCR 029. 循环有序列表的插入",
                                    "summary": "",
                                    "src": "/4ueAj6/",
                                    "original_src": "https://leetcode.cn/problems/4ueAj6/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "708. 循环有序列表的插入",
                                    "summary": "",
                                    "src": "/insert-into-a-sorted-circular-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/insert-into-a-sorted-circular-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2046. 给按照绝对值排序的链表排序",
                                    "summary": "",
                                    "src": "/sort-linked-list-already-sorted-using-absolute-values/",
                                    "original_src": "https://leetcode.cn/problems/sort-linked-list-already-sorted-using-absolute-values/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.4 反转链表",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1sd4y1x7KN/\">视频讲解【基础算法精讲 06】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "206. 反转链表",
                                    "summary": "",
                                    "src": "/reverse-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/reverse-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "92. 反转链表 II",
                                    "summary": "",
                                    "src": "/reverse-linked-list-ii/",
                                    "original_src": "https://leetcode.cn/problems/reverse-linked-list-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "24. 两两交换链表中的节点",
                                    "summary": "",
                                    "src": "/swap-nodes-in-pairs/",
                                    "original_src": "https://leetcode.cn/problems/swap-nodes-in-pairs/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "25. K 个一组翻转链表",
                                    "summary": "",
                                    "src": "/reverse-nodes-in-k-group/",
                                    "original_src": "https://leetcode.cn/problems/reverse-nodes-in-k-group/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2074. 反转偶数长度组的节点",
                                    "summary": "",
                                    "src": "/reverse-nodes-in-even-length-groups/",
                                    "original_src": "https://leetcode.cn/problems/reverse-nodes-in-even-length-groups/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1685.3599641299,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.5 前后指针",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1VP4y1Q71e/\">视频讲解【基础算法精讲 08】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "19. 删除链表的倒数第 N 个结点",
                                    "summary": "",
                                    "src": "/remove-nth-node-from-end-of-list/",
                                    "original_src": "https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "61. 旋转链表",
                                    "summary": "",
                                    "src": "/rotate-list/",
                                    "original_src": "https://leetcode.cn/problems/rotate-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1721. 交换链表中的节点",
                                    "summary": "",
                                    "src": "/swapping-nodes-in-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/swapping-nodes-in-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1386.9203620297,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1474. 删除链表 M 个节点之后的 N 个节点",
                                    "summary": "",
                                    "src": "/delete-n-nodes-after-m-nodes-of-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.6 快慢指针",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1KG4y1G7cu/\">视频讲解【基础算法精讲 07】</a><br>**思维扩展**：<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "876. 链表的中间结点",
                                    "summary": "",
                                    "src": "/middle-of-the-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/middle-of-the-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1231.6157956848,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2095. 删除链表的中间节点",
                                    "summary": "",
                                    "src": "/delete-the-middle-node-of-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/delete-the-middle-node-of-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1324.3520304377,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "234. 回文链表",
                                    "summary": "",
                                    "src": "/palindrome-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/palindrome-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2130. 链表最大孪生和",
                                    "summary": "",
                                    "src": "/maximum-twin-sum-of-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/maximum-twin-sum-of-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1317.9207508583,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "143. 重排链表",
                                    "summary": "",
                                    "src": "/reorder-list/",
                                    "original_src": "https://leetcode.cn/problems/reorder-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "141. 环形链表",
                                    "summary": "",
                                    "src": "/linked-list-cycle/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-cycle/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "142. 环形链表 II",
                                    "summary": "",
                                    "src": "/linked-list-cycle-ii/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-cycle-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "457. 环形数组是否存在循环",
                                    "summary": "",
                                    "src": "/circular-array-loop/",
                                    "original_src": "https://leetcode.cn/problems/circular-array-loop/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2674. 拆分循环链表",
                                    "summary": "",
                                    "src": "/split-a-circular-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/split-a-circular-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "287. 寻找重复数",
                                    "summary": "",
                                    "src": "/find-the-duplicate-number/",
                                    "original_src": "https://leetcode.cn/problems/find-the-duplicate-number/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.7 双指针",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "328. 奇偶链表",
                                    "summary": "",
                                    "src": "/odd-even-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/odd-even-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "86. 分隔链表",
                                    "summary": "",
                                    "src": "/partition-list/",
                                    "original_src": "https://leetcode.cn/problems/partition-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "160. 相交链表",
                                    "summary": "",
                                    "src": "/intersection-of-two-linked-lists/",
                                    "original_src": "https://leetcode.cn/problems/intersection-of-two-linked-lists/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.8 合并链表",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2. 两数相加",
                                    "summary": "",
                                    "src": "/add-two-numbers/",
                                    "original_src": "https://leetcode.cn/problems/add-two-numbers/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "445. 两数相加 II",
                                    "summary": "",
                                    "src": "/add-two-numbers-ii/",
                                    "original_src": "https://leetcode.cn/problems/add-two-numbers-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2816. 翻倍以链表形式表示的数字",
                                    "summary": "",
                                    "src": "/double-a-number-represented-as-a-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/double-a-number-represented-as-a-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1393.7857353048,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "21. 合并两个有序链表",
                                    "summary": "",
                                    "src": "/merge-two-sorted-lists/",
                                    "original_src": "https://leetcode.cn/problems/merge-two-sorted-lists/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "369. 给单链表加一",
                                    "summary": "",
                                    "src": "/plus-one-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/plus-one-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1634. 求两个多项式链表的和",
                                    "summary": "",
                                    "src": "/add-two-polynomials-represented-as-linked-lists/",
                                    "original_src": "https://leetcode.cn/problems/add-two-polynomials-represented-as-linked-lists/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.9 分治",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "23. 合并 K 个升序链表",
                                    "summary": "",
                                    "src": "/merge-k-sorted-lists/",
                                    "original_src": "https://leetcode.cn/problems/merge-k-sorted-lists/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "148. 排序链表",
                                    "summary": "",
                                    "src": "/sort-list/",
                                    "original_src": "https://leetcode.cn/problems/sort-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.10 综合应用",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "1019. 链表中的下一个更大节点",
                                    "summary": "",
                                    "src": "/next-greater-node-in-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/next-greater-node-in-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1570.8347522104,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1171. 从链表中删去总和值为零的连续节点",
                                    "summary": "",
                                    "src": "/remove-zero-sum-consecutive-nodes-from-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/remove-zero-sum-consecutive-nodes-from-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1782.3312212058,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "707. 设计链表",
                                    "summary": "",
                                    "src": "/design-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/design-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "146. LRU 缓存",
                                    "summary": "",
                                    "src": "/lru-cache/",
                                    "original_src": "https://leetcode.cn/problems/lru-cache/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "460. LFU 缓存",
                                    "summary": "",
                                    "src": "/lfu-cache/",
                                    "original_src": "https://leetcode.cn/problems/lfu-cache/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "432. 全 O(1) 的数据结构",
                                    "summary": "",
                                    "src": "/all-oone-data-structure/",
                                    "original_src": "https://leetcode.cn/problems/all-oone-data-structure/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1206. 设计跳表",
                                    "summary": "",
                                    "src": "/design-skiplist/",
                                    "original_src": "https://leetcode.cn/problems/design-skiplist/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§1.11 其他",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "138. 随机链表的复制",
                                    "summary": "",
                                    "src": "/copy-list-with-random-pointer/",
                                    "original_src": "https://leetcode.cn/problems/copy-list-with-random-pointer/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "382. 链表随机节点",
                                    "summary": "",
                                    "src": "/linked-list-random-node/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-random-node/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "430. 扁平化多级双向链表",
                                    "summary": "",
                                    "src": "/flatten-a-multilevel-doubly-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/flatten-a-multilevel-doubly-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1265. 逆序打印不可变链表",
                                    "summary": "",
                                    "src": "/print-immutable-linked-list-in-reverse/",
                                    "original_src": "https://leetcode.cn/problems/print-immutable-linked-list-in-reverse/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        }
                    ],
                    "isPremium": false,
                    "last_update": ""
                },
                {
                    "title": "二、二叉树",
                    "summary": "<img src=\"https://pic.leetcode.cn/1724824379-UOsXIV-dfsbfsnew-c.png\" alt=\"DFS BFS\" style=\"width: 100%;\"><br>**学习递归，从二叉树开始。**<br>晕递归的同学，请先看视频讲解<a href=\"https://www.bilibili.com/video/BV1UD4y1Y769/\">【基础算法精讲 09】</a>，欢迎点赞~<br>一般有三种遍历方式：<br>- **先序遍历**：见 §2.2 自顶向下 DFS。<br>- **中序遍历**：见 §2.9 二叉搜索树。<br>- **后序遍历**：见 §2.3 自底向上 DFS。<br>带着问题去做下面的题目：<br>1. 一般来说，DFS 的递归边界是空节点。在什么情况下，要额外把**叶子节点**作为递归边界？<br>2. 在什么情况下，DFS 需要有返回值？什么情况下不需要有返回值？<br>3. 在什么情况下，题目更适合用**自顶向下**的方法解决？什么情况下更适合用**自底向上**的方法解决？<br>",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [],
                    "nonLeafChild": [
                        {
                            "title": "§2.1 遍历二叉树",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "144. 二叉树的前序遍历",
                                    "summary": "",
                                    "src": "/binary-tree-preorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-preorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "94. 二叉树的中序遍历",
                                    "summary": "",
                                    "src": "/binary-tree-inorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-inorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "145. 二叉树的后序遍历",
                                    "summary": "",
                                    "src": "/binary-tree-postorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-postorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "872. 叶子相似的树",
                                    "summary": "",
                                    "src": "/leaf-similar-trees/",
                                    "original_src": "https://leetcode.cn/problems/leaf-similar-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1287.8970301681,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 44. 开幕式焰火",
                                    "summary": "",
                                    "src": "/sZ59z6/",
                                    "original_src": "https://leetcode.cn/problems/sZ59z6/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "404. 左叶子之和",
                                    "summary": "",
                                    "src": "/sum-of-left-leaves/",
                                    "original_src": "https://leetcode.cn/problems/sum-of-left-leaves/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "671. 二叉树中第二小的节点",
                                    "summary": "",
                                    "src": "/second-minimum-node-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1469. 寻找所有的独生节点",
                                    "summary": "",
                                    "src": "/find-all-the-lonely-nodes/",
                                    "original_src": "https://leetcode.cn/problems/find-all-the-lonely-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1214. 查找两棵二叉搜索树之和",
                                    "summary": "",
                                    "src": "/two-sum-bsts/",
                                    "original_src": "https://leetcode.cn/problems/two-sum-bsts/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1389.0328392117,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2764. 数组是否表示某二叉树的前序遍历",
                                    "summary": "",
                                    "src": "/is-array-a-preorder-of-some-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.2 自顶向下 DFS（先序遍历）",
                            "summary": "在「递」的过程中维护值。<br>> 有些题目自顶向下和自底向上都可以做。有些题目也可以用 BFS 做。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "104. 二叉树的最大深度",
                                    "summary": "",
                                    "src": "/maximum-depth-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-depth-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "111. 二叉树的最小深度",
                                    "summary": "",
                                    "src": "/minimum-depth-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/minimum-depth-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "112. 路径总和",
                                    "summary": "",
                                    "src": "/path-sum/",
                                    "original_src": "https://leetcode.cn/problems/path-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "129. 求根节点到叶节点数字之和",
                                    "summary": "",
                                    "src": "/sum-root-to-leaf-numbers/",
                                    "original_src": "https://leetcode.cn/problems/sum-root-to-leaf-numbers/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "199. 二叉树的右视图",
                                    "summary": "",
                                    "src": "/binary-tree-right-side-view/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-right-side-view/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1448. 统计二叉树中好节点的数目",
                                    "summary": "",
                                    "src": "/count-good-nodes-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/count-good-nodes-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1360.2184128413,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1457. 二叉树中的伪回文路径",
                                    "summary": "",
                                    "src": "/pseudo-palindromic-paths-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1405.0021415178,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1315. 祖父节点值为偶数的节点和",
                                    "summary": "",
                                    "src": "/sum-of-nodes-with-even-valued-grandparent/",
                                    "original_src": "https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1426.948379305,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "988. 从叶结点开始的最小字符串",
                                    "summary": "",
                                    "src": "/smallest-string-starting-from-leaf/",
                                    "original_src": "https://leetcode.cn/problems/smallest-string-starting-from-leaf/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1429.1878389249,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1026. 节点与其祖先之间的最大差值",
                                    "summary": "",
                                    "src": "/maximum-difference-between-node-and-ancestor/",
                                    "original_src": "https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1446.4280778775,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1022. 从根到叶的二进制数之和",
                                    "summary": "",
                                    "src": "/sum-of-root-to-leaf-binary-numbers/",
                                    "original_src": "https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1462.4423844498,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "623. 在二叉树中增加一行",
                                    "summary": "",
                                    "src": "/add-one-row-to-tree/",
                                    "original_src": "https://leetcode.cn/problems/add-one-row-to-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1372. 二叉树中的最长交错路径",
                                    "summary": "",
                                    "src": "/longest-zigzag-path-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1713.2768268466,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "971. 翻转二叉树以匹配先序遍历",
                                    "summary": "",
                                    "src": "/flip-binary-tree-to-match-preorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1786.5491561897,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2689. 从 Rope 树中提取第 K 个字符",
                                    "summary": "",
                                    "src": "/extract-kth-character-from-the-rope-tree/",
                                    "original_src": "https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "298. 二叉树最长连续序列",
                                    "summary": "",
                                    "src": "/binary-tree-longest-consecutive-sequence/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1430. 判断给定的序列是否是二叉树从根到叶的路径",
                                    "summary": "",
                                    "src": "/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "545. 二叉树的边界",
                                    "summary": "",
                                    "src": "/boundary-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/boundary-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.3 自底向上 DFS（后序遍历）",
                            "summary": "在「归」的过程中计算。<br><a href=\"https://www.bilibili.com/video/BV18M411z7bb/\">如何灵活运用递归？【基础算法精讲 10】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "104. 二叉树的最大深度",
                                    "summary": "",
                                    "src": "/maximum-depth-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-depth-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "111. 二叉树的最小深度",
                                    "summary": "",
                                    "src": "/minimum-depth-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/minimum-depth-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "965. 单值二叉树",
                                    "summary": "",
                                    "src": "/univalued-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/univalued-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1177.5660617941,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "100. 相同的树",
                                    "summary": "",
                                    "src": "/same-tree/",
                                    "original_src": "https://leetcode.cn/problems/same-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "101. 对称二叉树",
                                    "summary": "",
                                    "src": "/symmetric-tree/",
                                    "original_src": "https://leetcode.cn/problems/symmetric-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "951. 翻转等价二叉树",
                                    "summary": "",
                                    "src": "/flip-equivalent-binary-trees/",
                                    "original_src": "https://leetcode.cn/problems/flip-equivalent-binary-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1477.4844514104,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1379. 找出克隆二叉树中的相同节点",
                                    "summary": "",
                                    "src": "/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "110. 平衡二叉树",
                                    "summary": "",
                                    "src": "/balanced-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/balanced-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "226. 翻转二叉树",
                                    "summary": "",
                                    "src": "/invert-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/invert-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "617. 合并二叉树",
                                    "summary": "",
                                    "src": "/merge-two-binary-trees/",
                                    "original_src": "https://leetcode.cn/problems/merge-two-binary-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2331. 计算布尔二叉树的值",
                                    "summary": "",
                                    "src": "/evaluate-boolean-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/evaluate-boolean-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1303.5594588137,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "508. 出现次数最多的子树元素和",
                                    "summary": "",
                                    "src": "/most-frequent-subtree-sum/",
                                    "original_src": "https://leetcode.cn/problems/most-frequent-subtree-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "563. 二叉树的坡度",
                                    "summary": "",
                                    "src": "/binary-tree-tilt/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-tilt/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "606. 根据二叉树创建字符串",
                                    "summary": "",
                                    "src": "/construct-string-from-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/construct-string-from-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2265. 统计值等于子树平均值的节点数",
                                    "summary": "",
                                    "src": "/count-nodes-equal-to-average-of-subtree/",
                                    "original_src": "https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1472.7864965062,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1026. 节点与其祖先之间的最大差值",
                                    "summary": "",
                                    "src": "/maximum-difference-between-node-and-ancestor/",
                                    "original_src": "https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1446.4280778775,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3319. 第 K 大的完美二叉子树的大小",
                                    "summary": "",
                                    "src": "/k-th-largest-perfect-subtree-size-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1603.252304506,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1339. 分裂二叉树的最大乘积",
                                    "summary": "",
                                    "src": "/maximum-product-of-splitted-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1674.9985842835,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1372. 二叉树中的最长交错路径",
                                    "summary": "",
                                    "src": "/longest-zigzag-path-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1713.2768268466,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1145. 二叉树着色游戏",
                                    "summary": "",
                                    "src": "/binary-tree-coloring-game/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-coloring-game/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1741.4527995252,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "572. 另一棵树的子树",
                                    "summary": "",
                                    "src": "/subtree-of-another-tree/",
                                    "original_src": "https://leetcode.cn/problems/subtree-of-another-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1530. 好叶子节点对的数量",
                                    "summary": "",
                                    "src": "/number-of-good-leaf-nodes-pairs/",
                                    "original_src": "https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1745.6580748712,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 67. 装饰树",
                                    "summary": "",
                                    "src": "/KnLfVT/",
                                    "original_src": "https://leetcode.cn/problems/KnLfVT/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "298. 二叉树最长连续序列",
                                    "summary": "",
                                    "src": "/binary-tree-longest-consecutive-sequence/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "250. 统计同值子树",
                                    "summary": "",
                                    "src": "/count-univalue-subtrees/",
                                    "original_src": "https://leetcode.cn/problems/count-univalue-subtrees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1973. 值等于子节点值之和的节点数量",
                                    "summary": "",
                                    "src": "/count-nodes-equal-to-sum-of-descendants/",
                                    "original_src": "https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "663. 均匀树划分",
                                    "summary": "",
                                    "src": "/equal-tree-partition/",
                                    "original_src": "https://leetcode.cn/problems/equal-tree-partition/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1120. 子树的最大平均值",
                                    "summary": "",
                                    "src": "/maximum-average-subtree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-average-subtree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1361.8801013336,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2792. 计算足够大的节点数",
                                    "summary": "",
                                    "src": "/count-nodes-that-are-great-enough/",
                                    "original_src": "https://leetcode.cn/problems/count-nodes-that-are-great-enough/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "333. 最大二叉搜索子树",
                                    "summary": "",
                                    "src": "/largest-bst-subtree/",
                                    "original_src": "https://leetcode.cn/problems/largest-bst-subtree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "366. 寻找二叉树的叶子节点",
                                    "summary": "",
                                    "src": "/find-leaves-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-leaves-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "156. 上下翻转二叉树",
                                    "summary": "",
                                    "src": "/binary-tree-upside-down/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-upside-down/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1612. 检查两棵二叉表达式树是否等价",
                                    "summary": "",
                                    "src": "/check-if-two-expression-trees-are-equivalent/",
                                    "original_src": "https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.4 自底向上 DFS：删点",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "814. 二叉树剪枝",
                                    "summary": "",
                                    "src": "/binary-tree-pruning/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-pruning/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1380.1541980647,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1325. 删除给定值的叶子节点",
                                    "summary": "",
                                    "src": "/delete-leaves-with-a-given-value/",
                                    "original_src": "https://leetcode.cn/problems/delete-leaves-with-a-given-value/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1407.1322366299,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1110. 删点成林",
                                    "summary": "",
                                    "src": "/delete-nodes-and-return-forest/",
                                    "original_src": "https://leetcode.cn/problems/delete-nodes-and-return-forest/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1511.3725353467,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.5 有递有归",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "538. 把二叉搜索树转换为累加树",
                                    "summary": "",
                                    "src": "/convert-bst-to-greater-tree/",
                                    "original_src": "https://leetcode.cn/problems/convert-bst-to-greater-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1038. 从二叉搜索树到更大和树",
                                    "summary": "",
                                    "src": "/binary-search-tree-to-greater-sum-tree/",
                                    "original_src": "https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1374.6755455786,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "865. 具有所有最深节点的最小子树",
                                    "summary": "",
                                    "src": "/smallest-subtree-with-all-the-deepest-nodes/",
                                    "original_src": "https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1534.325005151,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1080. 根到叶路径上的不足节点",
                                    "summary": "",
                                    "src": "/insufficient-nodes-in-root-to-leaf-paths/",
                                    "original_src": "https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1804.5783242151,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.6 二叉树的直径",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV17o4y187h1/\">视频讲解【基础算法精讲 23】</a><br>另见本题单的「§3.5 树的直径」。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "543. 二叉树的直径",
                                    "summary": "",
                                    "src": "/diameter-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/diameter-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "687. 最长同值路径",
                                    "summary": "",
                                    "src": "/longest-univalue-path/",
                                    "original_src": "https://leetcode.cn/problems/longest-univalue-path/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "124. 二叉树中的最大路径和",
                                    "summary": "",
                                    "src": "/binary-tree-maximum-path-sum/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-maximum-path-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2385. 感染二叉树需要的总时间",
                                    "summary": "",
                                    "src": "/amount-of-time-for-binary-tree-to-be-infected/",
                                    "original_src": "https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1711.4873176824,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "549. 二叉树最长连续序列 II",
                                    "summary": "",
                                    "src": "/binary-tree-longest-consecutive-sequence-ii/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.7 回溯",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "257. 二叉树的所有路径",
                                    "summary": "",
                                    "src": "/binary-tree-paths/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-paths/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "113. 路径总和 II",
                                    "summary": "",
                                    "src": "/path-sum-ii/",
                                    "original_src": "https://leetcode.cn/problems/path-sum-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "437. 路径总和 III",
                                    "summary": "",
                                    "src": "/path-sum-iii/",
                                    "original_src": "https://leetcode.cn/problems/path-sum-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.8 最近公共祖先",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1W44y1Z7AR/\">视频讲解【基础算法精讲 12】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "235. 二叉搜索树的最近公共祖先",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "236. 二叉树的最近公共祖先",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1123. 最深叶节点的最近公共祖先",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-deepest-leaves/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1607.0005715974,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2096. 从二叉树一个节点到另一个节点每一步的方向",
                                    "summary": "",
                                    "src": "/step-by-step-directions-from-a-binary-tree-node-to-another/",
                                    "original_src": "https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1804.5283324227,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1740. 找到二叉树中的距离",
                                    "summary": "",
                                    "src": "/find-distance-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-distance-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1644. 二叉树的最近公共祖先 II",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-a-binary-tree-ii/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1650. 二叉树的最近公共祖先 III",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-a-binary-tree-iii/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1676. 二叉树的最近公共祖先 IV",
                                    "summary": "",
                                    "src": "/lowest-common-ancestor-of-a-binary-tree-iv/",
                                    "original_src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.9 二叉搜索树",
                            "summary": "一般是中序遍历。<br><a href=\"https://www.bilibili.com/video/BV14G411P7C1/\">视频讲解【基础算法精讲 11】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "700. 二叉搜索树中的搜索",
                                    "summary": "",
                                    "src": "/search-in-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/search-in-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "530. 二叉搜索树的最小绝对差",
                                    "summary": "",
                                    "src": "/minimum-absolute-difference-in-bst/",
                                    "original_src": "https://leetcode.cn/problems/minimum-absolute-difference-in-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "783. 二叉搜索树节点最小距离",
                                    "summary": "",
                                    "src": "/minimum-distance-between-bst-nodes/",
                                    "original_src": "https://leetcode.cn/problems/minimum-distance-between-bst-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1303.3201984827,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "938. 二叉搜索树的范围和",
                                    "summary": "",
                                    "src": "/range-sum-of-bst/",
                                    "original_src": "https://leetcode.cn/problems/range-sum-of-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1335.0295688697,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "501. 二叉搜索树中的众数",
                                    "summary": "",
                                    "src": "/find-mode-in-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-mode-in-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "230. 二叉搜索树中第 K 小的元素",
                                    "summary": "",
                                    "src": "/kth-smallest-element-in-a-bst/",
                                    "original_src": "https://leetcode.cn/problems/kth-smallest-element-in-a-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "98. 验证二叉搜索树",
                                    "summary": "",
                                    "src": "/validate-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/validate-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1305. 两棵二叉搜索树中的所有元素",
                                    "summary": "",
                                    "src": "/all-elements-in-two-binary-search-trees/",
                                    "original_src": "https://leetcode.cn/problems/all-elements-in-two-binary-search-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1260.1755576607,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "99. 恢复二叉搜索树",
                                    "summary": "",
                                    "src": "/recover-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/recover-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "897. 递增顺序搜索树",
                                    "summary": "",
                                    "src": "/increasing-order-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/increasing-order-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1473.2523136772,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2476. 二叉搜索树最近节点查询",
                                    "summary": "",
                                    "src": "/closest-nodes-queries-in-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1596.9852244916,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "653. 两数之和 IV - 输入二叉搜索树",
                                    "summary": "",
                                    "src": "/two-sum-iv-input-is-a-bst/",
                                    "original_src": "https://leetcode.cn/problems/two-sum-iv-input-is-a-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1373. 二叉搜索子树的最大键值和",
                                    "summary": "",
                                    "src": "/maximum-sum-bst-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1913.6704728453,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1932. 合并多棵二叉搜索树",
                                    "summary": "",
                                    "src": "/merge-bsts-to-create-single-bst/",
                                    "original_src": "https://leetcode.cn/problems/merge-bsts-to-create-single-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2483.9435767299,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "285. 二叉搜索树中的中序后继",
                                    "summary": "",
                                    "src": "/inorder-successor-in-bst/",
                                    "original_src": "https://leetcode.cn/problems/inorder-successor-in-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "510. 二叉搜索树中的中序后继 II",
                                    "summary": "",
                                    "src": "/inorder-successor-in-bst-ii/",
                                    "original_src": "https://leetcode.cn/problems/inorder-successor-in-bst-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "270. 最接近的二叉搜索树值",
                                    "summary": "",
                                    "src": "/closest-binary-search-tree-value/",
                                    "original_src": "https://leetcode.cn/problems/closest-binary-search-tree-value/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "272. 最接近的二叉搜索树值 II",
                                    "summary": "",
                                    "src": "/closest-binary-search-tree-value-ii/",
                                    "original_src": "https://leetcode.cn/problems/closest-binary-search-tree-value-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "255. 验证二叉搜索树的前序遍历序列",
                                    "summary": "",
                                    "src": "/verify-preorder-sequence-in-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1902. 给定二叉搜索树的插入顺序求深度",
                                    "summary": "",
                                    "src": "/depth-of-bst-given-insertion-order/",
                                    "original_src": "https://leetcode.cn/problems/depth-of-bst-given-insertion-order/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.10 创建二叉树",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "108. 将有序数组转换为二叉搜索树",
                                    "summary": "",
                                    "src": "/convert-sorted-array-to-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "654. 最大二叉树",
                                    "summary": "",
                                    "src": "/maximum-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "998. 最大二叉树 II",
                                    "summary": "",
                                    "src": "/maximum-binary-tree-ii/",
                                    "original_src": "https://leetcode.cn/problems/maximum-binary-tree-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1497.8880991093,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1008. 前序遍历构造二叉搜索树",
                                    "summary": "",
                                    "src": "/construct-binary-search-tree-from-preorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1562.9802666517,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1382. 将二叉搜索树变平衡",
                                    "summary": "",
                                    "src": "/balance-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/balance-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1540.5750839091,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2196. 根据描述创建二叉树",
                                    "summary": "",
                                    "src": "/create-binary-tree-from-descriptions/",
                                    "original_src": "https://leetcode.cn/problems/create-binary-tree-from-descriptions/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1643.5283095007,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "105. 从前序与中序遍历序列构造二叉树",
                                    "summary": "",
                                    "src": "/construct-binary-tree-from-preorder-and-inorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "106. 从中序与后序遍历序列构造二叉树",
                                    "summary": "",
                                    "src": "/construct-binary-tree-from-inorder-and-postorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "889. 根据前序和后序遍历构造二叉树",
                                    "summary": "",
                                    "src": "/construct-binary-tree-from-preorder-and-postorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1731.5555445321,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1028. 从先序遍历还原二叉树",
                                    "summary": "",
                                    "src": "/recover-a-tree-from-preorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1797.4917663632,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "536. 从字符串生成二叉树",
                                    "summary": "",
                                    "src": "/construct-binary-tree-from-string/",
                                    "original_src": "https://leetcode.cn/problems/construct-binary-tree-from-string/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1628. 设计带解析函数的表达式树",
                                    "summary": "",
                                    "src": "/design-an-expression-tree-with-evaluate-function/",
                                    "original_src": "https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1597. 根据中缀表达式构造二叉表达式树",
                                    "summary": "",
                                    "src": "/build-binary-expression-tree-from-infix-expression/",
                                    "original_src": "https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.11 插入/删除节点",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "701. 二叉搜索树中的插入操作",
                                    "summary": "",
                                    "src": "/insert-into-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/insert-into-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "450. 删除二叉搜索树中的节点",
                                    "summary": "",
                                    "src": "/delete-node-in-a-bst/",
                                    "original_src": "https://leetcode.cn/problems/delete-node-in-a-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "669. 修剪二叉搜索树",
                                    "summary": "",
                                    "src": "/trim-a-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/trim-a-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "776. 拆分二叉搜索树",
                                    "summary": "",
                                    "src": "/split-bst/",
                                    "original_src": "https://leetcode.cn/problems/split-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1809.5579156134,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1666. 改变二叉树的根节点",
                                    "summary": "",
                                    "src": "/change-the-root-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/change-the-root-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.12 树形 DP",
                            "summary": "更多树形 DP，见 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的「树形 DP」。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "337. 打家劫舍 III",
                                    "summary": "",
                                    "src": "/house-robber-iii/",
                                    "original_src": "https://leetcode.cn/problems/house-robber-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "968. 监控二叉树",
                                    "summary": "",
                                    "src": "/binary-tree-cameras/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-cameras/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2124.1329592058,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 10. 二叉树任务调度",
                                    "summary": "",
                                    "src": "/er-cha-shu-ren-wu-diao-du/",
                                    "original_src": "https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 34. 二叉树染色",
                                    "summary": "",
                                    "src": "/er-cha-shu-ran-se-UGC/",
                                    "original_src": "https://leetcode.cn/problems/er-cha-shu-ran-se-UGC/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 64. 二叉树灯饰",
                                    "summary": "",
                                    "src": "/U7WvvU/",
                                    "original_src": "https://leetcode.cn/problems/U7WvvU/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2313. 二叉树中得到结果所需的最少翻转次数",
                                    "summary": "",
                                    "src": "/minimum-flips-in-binary-tree-to-get-result/",
                                    "original_src": "https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.13 二叉树 BFS",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1hG4y1277i/\">视频讲解【基础算法精讲 13】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "102. 二叉树的层序遍历",
                                    "summary": "",
                                    "src": "/binary-tree-level-order-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-level-order-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "103. 二叉树的锯齿形层序遍历",
                                    "summary": "",
                                    "src": "/binary-tree-zigzag-level-order-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "107. 二叉树的层序遍历 II",
                                    "summary": "",
                                    "src": "/binary-tree-level-order-traversal-ii/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-level-order-traversal-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "199. 二叉树的右视图",
                                    "summary": "",
                                    "src": "/binary-tree-right-side-view/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-right-side-view/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "513. 找树左下角的值",
                                    "summary": "",
                                    "src": "/find-bottom-left-tree-value/",
                                    "original_src": "https://leetcode.cn/problems/find-bottom-left-tree-value/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "515. 在每个树行中找最大值",
                                    "summary": "",
                                    "src": "/find-largest-value-in-each-tree-row/",
                                    "original_src": "https://leetcode.cn/problems/find-largest-value-in-each-tree-row/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "637. 二叉树的层平均值",
                                    "summary": "",
                                    "src": "/average-of-levels-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/average-of-levels-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1161. 最大层内元素和",
                                    "summary": "",
                                    "src": "/maximum-level-sum-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1249.9086403595,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "993. 二叉树的堂兄弟节点",
                                    "summary": "",
                                    "src": "/cousins-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/cousins-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1287.9002757199,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2583. 二叉树中的第 K 大层和",
                                    "summary": "",
                                    "src": "/kth-largest-sum-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/kth-largest-sum-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1374.3527967199,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1302. 层数最深叶子节点的和",
                                    "summary": "",
                                    "src": "/deepest-leaves-sum/",
                                    "original_src": "https://leetcode.cn/problems/deepest-leaves-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1387.9431104106,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2415. 反转二叉树的奇数层",
                                    "summary": "",
                                    "src": "/reverse-odd-levels-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1431.0523656241,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1609. 奇偶树",
                                    "summary": "",
                                    "src": "/even-odd-tree/",
                                    "original_src": "https://leetcode.cn/problems/even-odd-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1438.223135905,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "623. 在二叉树中增加一行",
                                    "summary": "",
                                    "src": "/add-one-row-to-tree/",
                                    "original_src": "https://leetcode.cn/problems/add-one-row-to-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2471. 逐层排序二叉树所需的最少操作数目",
                                    "summary": "",
                                    "src": "/minimum-number-of-operations-to-sort-a-binary-tree-by-level/",
                                    "original_src": "https://leetcode.cn/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1635.1520858279,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2641. 二叉树的堂兄弟节点 II",
                                    "summary": "",
                                    "src": "/cousins-in-binary-tree-ii/",
                                    "original_src": "https://leetcode.cn/problems/cousins-in-binary-tree-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1676.5007365375,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "919. 完全二叉树插入器",
                                    "summary": "",
                                    "src": "/complete-binary-tree-inserter/",
                                    "original_src": "https://leetcode.cn/problems/complete-binary-tree-inserter/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1690.9043557462,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "958. 二叉树的完全性检验",
                                    "summary": "",
                                    "src": "/check-completeness-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/check-completeness-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1702.8035923458,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "863. 二叉树中所有距离为 K 的结点",
                                    "summary": "",
                                    "src": "/all-nodes-distance-k-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1663.1853149056,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "662. 二叉树最大宽度",
                                    "summary": "",
                                    "src": "/maximum-width-of-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-width-of-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3157. 找到具有最小和的树的层数",
                                    "summary": "",
                                    "src": "/find-the-level-of-tree-with-minimum-sum/",
                                    "original_src": "https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1602. 找到二叉树中最近的右侧节点",
                                    "summary": "",
                                    "src": "/find-nearest-right-node-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-nearest-right-node-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "742. 二叉树最近的叶节点",
                                    "summary": "",
                                    "src": "/closest-leaf-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/closest-leaf-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1660. 纠正二叉树",
                                    "summary": "",
                                    "src": "/correct-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/correct-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.14 链表+二叉树",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "114. 二叉树展开为链表",
                                    "summary": "",
                                    "src": "/flatten-binary-tree-to-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1367. 二叉树中的链表",
                                    "summary": "",
                                    "src": "/linked-list-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/linked-list-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1649.9728054796,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "109. 有序链表转换二叉搜索树",
                                    "summary": "",
                                    "src": "/convert-sorted-list-to-binary-search-tree/",
                                    "original_src": "https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "116. 填充每个节点的下一个右侧节点指针",
                                    "summary": "",
                                    "src": "/populating-next-right-pointers-in-each-node/",
                                    "original_src": "https://leetcode.cn/problems/populating-next-right-pointers-in-each-node/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "117. 填充每个节点的下一个右侧节点指针 II",
                                    "summary": "",
                                    "src": "/populating-next-right-pointers-in-each-node-ii/",
                                    "original_src": "https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "426. 将二叉搜索树转化为排序的双向链表",
                                    "summary": "",
                                    "src": "/convert-binary-search-tree-to-sorted-doubly-linked-list/",
                                    "original_src": "https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.15 N 叉树",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "589. N 叉树的前序遍历",
                                    "summary": "",
                                    "src": "/n-ary-tree-preorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/n-ary-tree-preorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "590. N 叉树的后序遍历",
                                    "summary": "",
                                    "src": "/n-ary-tree-postorder-traversal/",
                                    "original_src": "https://leetcode.cn/problems/n-ary-tree-postorder-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "559. N 叉树的最大深度",
                                    "summary": "",
                                    "src": "/maximum-depth-of-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/maximum-depth-of-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "429. N 叉树的层序遍历",
                                    "summary": "",
                                    "src": "/n-ary-tree-level-order-traversal/",
                                    "original_src": "https://leetcode.cn/problems/n-ary-tree-level-order-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "427. 建立四叉树",
                                    "summary": "",
                                    "src": "/construct-quad-tree/",
                                    "original_src": "https://leetcode.cn/problems/construct-quad-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "558. 四叉树交集",
                                    "summary": "",
                                    "src": "/logical-or-of-two-binary-grids-represented-as-quad-trees/",
                                    "original_src": "https://leetcode.cn/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "428. 序列化和反序列化 N 叉树",
                                    "summary": "",
                                    "src": "/serialize-and-deserialize-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/serialize-and-deserialize-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1490. 克隆 N 叉树",
                                    "summary": "",
                                    "src": "/clone-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/clone-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1506. 找到 N 叉树的根节点",
                                    "summary": "",
                                    "src": "/find-root-of-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-root-of-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1522. N 叉树的直径",
                                    "summary": "",
                                    "src": "/diameter-of-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/diameter-of-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1516. 移动 N 叉树的子树",
                                    "summary": "",
                                    "src": "/move-sub-tree-of-n-ary-tree/",
                                    "original_src": "https://leetcode.cn/problems/move-sub-tree-of-n-ary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§2.16 其他",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "1261. 在受污染的二叉树中查找元素",
                                    "summary": "",
                                    "src": "/find-elements-in-a-contaminated-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1439.5656079032,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1104. 二叉树寻路",
                                    "summary": "",
                                    "src": "/path-in-zigzag-labelled-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/path-in-zigzag-labelled-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1544.8391626032,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "987. 二叉树的垂序遍历",
                                    "summary": "",
                                    "src": "/vertical-order-traversal-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1675.9610355975,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "655. 输出二叉树",
                                    "summary": "",
                                    "src": "/print-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/print-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "979. 在二叉树中分配硬币",
                                    "summary": "",
                                    "src": "/distribute-coins-in-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/distribute-coins-in-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1709.1461451873,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "222. 完全二叉树的节点个数",
                                    "summary": "",
                                    "src": "/count-complete-tree-nodes/",
                                    "original_src": "https://leetcode.cn/problems/count-complete-tree-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "297. 二叉树的序列化与反序列化",
                                    "summary": "",
                                    "src": "/serialize-and-deserialize-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/serialize-and-deserialize-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "449. 序列化和反序列化二叉搜索树",
                                    "summary": "",
                                    "src": "/serialize-and-deserialize-bst/",
                                    "original_src": "https://leetcode.cn/problems/serialize-and-deserialize-bst/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "331. 验证二叉树的前序序列化",
                                    "summary": "",
                                    "src": "/verify-preorder-serialization-of-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "652. 寻找重复的子树",
                                    "summary": "",
                                    "src": "/find-duplicate-subtrees/",
                                    "original_src": "https://leetcode.cn/problems/find-duplicate-subtrees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "173. 二叉搜索树迭代器",
                                    "summary": "",
                                    "src": "/binary-search-tree-iterator/",
                                    "original_src": "https://leetcode.cn/problems/binary-search-tree-iterator/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2049. 统计最高分的节点数目",
                                    "summary": "",
                                    "src": "/count-nodes-with-the-highest-score/",
                                    "original_src": "https://leetcode.cn/problems/count-nodes-with-the-highest-score/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1911.7063530593,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2673. 使二叉树所有路径值相等的最小代价",
                                    "summary": "",
                                    "src": "/make-costs-of-paths-equal-in-a-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1917.1049672432,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2509. 查询树中环的长度",
                                    "summary": "",
                                    "src": "/cycle-length-queries-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/cycle-length-queries-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1948.489500779,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2458. 移除子树后的二叉树高度",
                                    "summary": "",
                                    "src": "/height-of-binary-tree-after-subtree-removal-queries/",
                                    "original_src": "https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2298.6242048519,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 26. 导航装置",
                                    "summary": "",
                                    "src": "/hSRGyL/",
                                    "original_src": "https://leetcode.cn/problems/hSRGyL/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 52. 二叉搜索树染色",
                                    "summary": "",
                                    "src": "/QO5KpG/",
                                    "original_src": "https://leetcode.cn/problems/QO5KpG/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 60. 力扣泡泡龙",
                                    "summary": "",
                                    "src": "/WInSav/",
                                    "original_src": "https://leetcode.cn/problems/WInSav/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "314. 二叉树的垂直遍历",
                                    "summary": "",
                                    "src": "/binary-tree-vertical-order-traversal/",
                                    "original_src": "https://leetcode.cn/problems/binary-tree-vertical-order-traversal/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "666. 路径总和 IV",
                                    "summary": "",
                                    "src": "/path-sum-iv/",
                                    "original_src": "https://leetcode.cn/problems/path-sum-iv/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1586. 二叉搜索树迭代器 II",
                                    "summary": "",
                                    "src": "/binary-search-tree-iterator-ii/",
                                    "original_src": "https://leetcode.cn/problems/binary-search-tree-iterator-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2773. 特殊二叉树的高度",
                                    "summary": "",
                                    "src": "/height-of-special-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/height-of-special-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1485. 克隆含随机指针的二叉树",
                                    "summary": "",
                                    "src": "/clone-binary-tree-with-random-pointer/",
                                    "original_src": "https://leetcode.cn/problems/clone-binary-tree-with-random-pointer/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2445. 值为 1 的节点数",
                                    "summary": "",
                                    "src": "/number-of-nodes-with-value-one/",
                                    "original_src": "https://leetcode.cn/problems/number-of-nodes-with-value-one/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "431. 将 N 叉树编码为二叉树",
                                    "summary": "",
                                    "src": "/encode-n-ary-tree-to-binary-tree/",
                                    "original_src": "https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "2005. 斐波那契树的移除子树游戏",
                                    "summary": "",
                                    "src": "/subtree-removal-game-with-fibonacci-tree/",
                                    "original_src": "https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        }
                    ],
                    "isPremium": false,
                    "last_update": ""
                },
                {
                    "title": "三、一般树",
                    "summary": "",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [],
                    "nonLeafChild": [
                        {
                            "title": "§3.1 遍历",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2368. 受限条件下可到达节点的数目",
                                    "summary": "",
                                    "src": "/reachable-nodes-with-restrictions/",
                                    "original_src": "https://leetcode.cn/problems/reachable-nodes-with-restrictions/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1476.9118898539,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1466. 重新规划路线",
                                    "summary": "",
                                    "src": "/reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
                                    "original_src": "https://leetcode.cn/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1633.6202302555,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "582. 杀掉进程",
                                    "summary": "",
                                    "src": "/kill-process/",
                                    "original_src": "https://leetcode.cn/problems/kill-process/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.2 自顶向下 DFS",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "1376. 通知所有员工所需的时间",
                                    "summary": "",
                                    "src": "/time-needed-to-inform-all-employees/",
                                    "original_src": "https://leetcode.cn/problems/time-needed-to-inform-all-employees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1561.0553908973,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3528. 单位转换 I",
                                    "summary": "",
                                    "src": "/unit-conversion-i/",
                                    "original_src": "https://leetcode.cn/problems/unit-conversion-i/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1579.8019590229,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1443. 收集树上所有苹果的最少时间",
                                    "summary": "",
                                    "src": "/minimum-time-to-collect-all-apples-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/minimum-time-to-collect-all-apples-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1682.8882177724,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1377. T 秒后青蛙的位置",
                                    "summary": "",
                                    "src": "/frog-position-after-t-seconds/",
                                    "original_src": "https://leetcode.cn/problems/frog-position-after-t-seconds/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1823.8779711373,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3067. 在带权树网络中统计可连接服务器对数目",
                                    "summary": "",
                                    "src": "/count-pairs-of-connectable-servers-in-a-weighted-tree-network/",
                                    "original_src": "https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1908.9411092109,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3372. 连接两棵树后最大目标节点数目 I",
                                    "summary": "",
                                    "src": "/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
                                    "original_src": "https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1926.7598451706,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2467. 树上最大得分和路径",
                                    "summary": "",
                                    "src": "/most-profitable-path-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/most-profitable-path-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2053.354609292,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3373. 连接两棵树后最大目标节点数目 II",
                                    "summary": "",
                                    "src": "/maximize-the-number-of-target-nodes-after-connecting-trees-ii/",
                                    "original_src": "https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2161.6248796745,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1766. 互质树",
                                    "summary": "",
                                    "src": "/tree-of-coprimes/",
                                    "original_src": "https://leetcode.cn/problems/tree-of-coprimes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2231.8099102949,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2791. 树中可以形成回文的路径数",
                                    "summary": "",
                                    "src": "/count-paths-that-can-form-a-palindrome-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2677.1682592316,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3535. 单位转换 II",
                                    "summary": "",
                                    "src": "/unit-conversion-ii/",
                                    "original_src": "https://leetcode.cn/problems/unit-conversion-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.3 自底向上 DFS",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3249. 统计好节点的数目",
                                    "summary": "",
                                    "src": "/count-the-number-of-good-nodes/",
                                    "original_src": "https://leetcode.cn/problems/count-the-number-of-good-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1565.8040286471,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1519. 子树中标签相同的节点数",
                                    "summary": "",
                                    "src": "/number-of-nodes-in-the-sub-tree-with-the-same-label/",
                                    "original_src": "https://leetcode.cn/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1808.787108831,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3558. 给边赋权值的方案数 I",
                                    "summary": "",
                                    "src": "/number-of-ways-to-assign-edge-weights-i/",
                                    "original_src": "https://leetcode.cn/problems/number-of-ways-to-assign-edge-weights-i/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1845.3005046749,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3593. 使叶子路径成本相等的最小增量",
                                    "summary": "",
                                    "src": "/minimum-increments-to-equalize-leaf-paths/",
                                    "original_src": "https://leetcode.cn/problems/minimum-increments-to-equalize-leaf-paths/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1959.1438732568,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2872. 可以被 K 整除连通块的最大数目",
                                    "summary": "",
                                    "src": "/maximum-number-of-k-divisible-components/",
                                    "original_src": "https://leetcode.cn/problems/maximum-number-of-k-divisible-components/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1967.5589835406,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2477. 到达首都的最少油耗",
                                    "summary": "",
                                    "src": "/minimum-fuel-cost-to-report-to-the-capital/",
                                    "original_src": "https://leetcode.cn/problems/minimum-fuel-cost-to-report-to-the-capital/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2011.9703133514,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2973. 树中每个节点放置的金币数目",
                                    "summary": "",
                                    "src": "/find-number-of-coins-to-place-in-tree-nodes/",
                                    "original_src": "https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2276.9256951751,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2440. 创建价值相同的连通块",
                                    "summary": "",
                                    "src": "/create-components-with-same-value/",
                                    "original_src": "https://leetcode.cn/problems/create-components-with-same-value/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2460.3152437576,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1273. 删除树节点",
                                    "summary": "",
                                    "src": "/delete-tree-nodes/",
                                    "original_src": "https://leetcode.cn/problems/delete-tree-nodes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1732.7813534239,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "3004. 相同颜色的最大子树",
                                    "summary": "",
                                    "src": "/maximum-subtree-of-the-same-color/",
                                    "original_src": "https://leetcode.cn/problems/maximum-subtree-of-the-same-color/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.4 有递有归",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3593. 使叶子路径成本相等的最小增量",
                                    "summary": "",
                                    "src": "/minimum-increments-to-equalize-leaf-paths/",
                                    "original_src": "https://leetcode.cn/problems/minimum-increments-to-equalize-leaf-paths/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1959.1438732568,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3331. 修改后子树的大小",
                                    "summary": "",
                                    "src": "/find-subtree-sizes-after-changes/",
                                    "original_src": "https://leetcode.cn/problems/find-subtree-sizes-after-changes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2045.9921455749,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.5 树的直径",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV17o4y187h1/\">视频讲解【基础算法精讲 23】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2246. 相邻字符不同的最长路径",
                                    "summary": "",
                                    "src": "/longest-path-with-different-adjacent-characters/",
                                    "original_src": "https://leetcode.cn/problems/longest-path-with-different-adjacent-characters/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2126.3922279277,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3203. 合并两棵树后的最小直径",
                                    "summary": "",
                                    "src": "/find-minimum-diameter-after-merging-two-trees/",
                                    "original_src": "https://leetcode.cn/problems/find-minimum-diameter-after-merging-two-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2266.0997671519,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1617. 统计子树中城市之间最大距离",
                                    "summary": "",
                                    "src": "/count-subtrees-with-max-distance-between-cities/",
                                    "original_src": "https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2308.6545905335,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2538. 最大价值和与最小价值和的差值",
                                    "summary": "",
                                    "src": "/difference-between-maximum-and-minimum-price-sum/",
                                    "original_src": "https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2397.9722495587,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1245. 树的直径",
                                    "summary": "",
                                    "src": "/tree-diameter/",
                                    "original_src": "https://leetcode.cn/problems/tree-diameter/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1792.076794537,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "3313. 查找树中最后标记的节点",
                                    "summary": "",
                                    "src": "/find-the-last-marked-nodes-in-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-the-last-marked-nodes-in-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.6 树的拓扑排序",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "310. 最小高度树",
                                    "summary": "",
                                    "src": "/minimum-height-trees/",
                                    "original_src": "https://leetcode.cn/problems/minimum-height-trees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2603. 收集树中金币",
                                    "summary": "",
                                    "src": "/collect-coins-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/collect-coins-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2711.8717381409,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.7 DFS 时间戳",
                            "summary": "可以把树上问题转化成数组问题，比如子树的操作转化成子数组的操作。通常要结合其他数据结构。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3515. 带权树中的最短路径",
                                    "summary": "",
                                    "src": "/shortest-path-in-a-weighted-tree/",
                                    "original_src": "https://leetcode.cn/problems/shortest-path-in-a-weighted-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2312.2207190263,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 05. 发 LeetCoin",
                                    "summary": "",
                                    "src": "/coin-bonus/",
                                    "original_src": "https://leetcode.cn/problems/coin-bonus/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2322. 从树中删除边的最小分数",
                                    "summary": "",
                                    "src": "/minimum-score-after-removals-on-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/minimum-score-after-removals-on-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2391.657270733,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3327. 判断 DFS 字符串是否是回文串",
                                    "summary": "",
                                    "src": "/check-if-dfs-strings-are-palindromes/",
                                    "original_src": "https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2454.1900261902,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3590. 第 K 小的路径异或和",
                                    "summary": "",
                                    "src": "/kth-smallest-path-xor-sum/",
                                    "original_src": "https://leetcode.cn/problems/kth-smallest-path-xor-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2645.836955523,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "返回 x 到 y 的距离（最短路长度）",
                            "summary": "<a href=\"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node/solution/mo-ban-jiang-jie-shu-shang-bei-zeng-suan-v3rw/\">讲解</a><br>带权树 LCA 模板（节点编号从 $0$ 开始）：<br>```py [sol-Python3]<br>class LcaBinaryLifting:<br>def __init__(self, edges: List[List[int]]):<br>n = len(edges) + 1<br>self.m = m = n.bit_length()<br>g = [[] for _ in range(n)]<br>for x, y, w in edges:<br>g[x].append((y, w))<br>g[y].append((x, w))<br>depth = [0] * n<br>dis = [0] * n  # 如果是无权树（边权为 1），dis 可以去掉，用 depth 代替<br>pa = [[-1] * m for _ in range(n)]<br>def dfs(x: int, fa: int) -> None:<br>pa[x][0] = fa<br>for y, w in g[x]:<br>if y != fa:<br>depth[y] = depth[x] + 1<br>dis[y] = dis[x] + w<br>dfs(y, x)<br>dfs(0, -1)<br>for i in range(m - 1):<br>for x in range(n):<br>if (p := pa[x][i]) != -1:<br>pa[x][i + 1] = pa[p][i]<br>self.depth = depth<br>self.dis = dis<br>self.pa = pa<br>def get_kth_ancestor(self, node: int, k: int) -> int:<br>for i in range(k.bit_length()):<br>if k >> i & 1:<br>node = self.pa[node][i]<br>if node < 0:<br>return -1<br>return node<br>def get_lca(self, x: int, y: int) -> int:<br>if self.depth[x] > self.depth[y]:<br>x, y = y, x<br>y = self.get_kth_ancestor(y, self.depth[y] - self.depth[x])<br>if y == x:<br>return x<br>for i in range(self.m - 1, -1, -1):<br>px, py = self.pa[x][i], self.pa[y][i]<br>if px != py:<br>x, y = px, py  # 同时往上跳 2**i 步<br>return self.pa[x][0]<br>def get_dis(self, x: int, y: int) -> int:<br>return self.dis[x] + self.dis[y] - self.dis[self.get_lca(x, y)] * 2<br>```<br>```java [sol-Java]<br>class LcaBinaryLifting {<br>private final int[] depth;<br>private final long[] dis; // 如果是无权树（边权为 1），dis 可以去掉，用 depth 代替<br>private final int[][] pa;<br>public LcaBinaryLifting(int[][] edges) {<br>int n = edges.length + 1;<br>int m = 32 - Integer.numberOfLeadingZeros(n); // n 的二进制长度<br>List<int[]>[] g = new ArrayList[n];<br>Arrays.setAll(g, e -> new ArrayList<>());<br>for (int[] e : edges) {<br>int x = e[0], y = e[1], w = e[2];<br>g[x].add(new int[]{y, w});<br>g[y].add(new int[]{x, w});<br>}<br>depth = new int[n];<br>dis = new long[n];<br>pa = new int[n][m];<br>dfs(g, 0, -1);<br>for (int i = 0; i < m - 1; i++) {<br>for (int x = 0; x < n; x++) {<br>int p = pa[x][i];<br>pa[x][i + 1] = p < 0 ? -1 : pa[p][i];<br>}<br>}<br>}<br>private void dfs(List<int[]>[] g, int x, int fa) {<br>pa[x][0] = fa;<br>for (int[] e : g[x]) {<br>int y = e[0];<br>if (y != fa) {<br>depth[y] = depth[x] + 1;<br>dis[y] = dis[x] + e[1];<br>dfs(g, y, x);<br>}<br>}<br>}<br>// 返回 node 的第 k 个祖先节点<br>// 如果不存在，返回 -1<br>public int getKthAncestor(int node, int k) {<br>for (; k > 0 && node >= 0; k &= k - 1) {<br>node = pa[node][Integer.numberOfTrailingZeros(k)];<br>}<br>return node;<br>}<br>// 返回 x 和 y 的最近公共祖先（节点编号从 0 开始）<br>public int getLCA(int x, int y) {<br>if (depth[x] > depth[y]) {<br>int tmp = y;<br>y = x;<br>x = tmp;<br>}<br>// 使 y 和 x 在同一深度<br>y = getKthAncestor(y, depth[y] - depth[x]);<br>if (y == x) {<br>return x;<br>}<br>for (int i = pa[x].length - 1; i >= 0; i--) {<br>int px = pa[x][i], py = pa[y][i];<br>if (px != py) {<br>x = px;<br>y = py; // 同时往上跳 2^i 步<br>}<br>}<br>return pa[x][0];<br>}<br>// 返回 x 到 y 的距离（最短路长度）<br>public long getDis(int x, int y) {<br>return dis[x] + dis[y] - dis[getLCA(x, y)] * 2;<br>}<br>}<br>```<br>```cpp [sol-C++]<br>class LcaBinaryLifting {<br>vector<int> depth;<br>vector<long long> dis; // 如果是无权树（边权为 1），dis 可以去掉，用 depth 代替<br>vector<vector<int>> pa;<br>public:<br>LcaBinaryLifting(vector<vector<int>>& edges) {<br>int n = edges.size() + 1;<br>int m = bit_width((unsigned) n); // n 的二进制长度<br>vector<vector<pair<int, int>>> g(n);<br>for (auto& e : edges) {<br>int x = e[0], y = e[1], w = e[2];<br>g[x].emplace_back(y, w);<br>g[y].emplace_back(x, w);<br>}<br>depth.resize(n);<br>dis.resize(n);<br>pa.resize(n, vector<int>(m, -1));<br>auto dfs = [&](this auto&& dfs, int x, int fa) -> void {<br>pa[x][0] = fa;<br>for (auto& [y, w] : g[x]) {<br>if (y != fa) {<br>depth[y] = depth[x] + 1;<br>dis[y] = dis[x] + w;<br>dfs(y, x);<br>}<br>}<br>};<br>dfs(0, -1);<br>for (int i = 0; i < m - 1; i++) {<br>for (int x = 0; x < n; x++) {<br>if (int p = pa[x][i]; p != -1) {<br>pa[x][i + 1] = pa[p][i];<br>}<br>}<br>}<br>}<br>// 返回 node 的第 k 个祖先节点<br>// 如果不存在，返回 -1<br>int get_kth_ancestor(int node, int k) {<br>for (; k > 0 && node >= 0; k &= k - 1) {<br>node = pa[node][countr_zero((unsigned) k)];<br>}<br>return node;<br>}<br>// 返回 x 和 y 的最近公共祖先（节点编号从 0 开始）<br>int get_lca(int x, int y) {<br>if (depth[x] > depth[y]) {<br>swap(x, y);<br>}<br>y = get_kth_ancestor(y, depth[y] - depth[x]); // 使 y 和 x 在同一深度<br>if (y == x) {<br>return x;<br>}<br>for (int i = pa[x].size() - 1; i >= 0; i--) {<br>int px = pa[x][i], py = pa[y][i];<br>if (px != py) {<br>x = px;<br>y = py; // 同时往上跳 2^i 步<br>}<br>}<br>return pa[x][0];<br>}<br>// 返回 x 到 y 的距离（最短路长度）<br>long long get_dis(int x, int y) {<br>return dis[x] + dis[y] - dis[get_lca(x, y)] * 2;<br>}<br>};<br>```<br>```go [sol-Go]<br>func minimumWeight(edges [][]int, queries [][]int) []int {<br>n := len(edges) + 1<br>type edge struct{ to, wt int }<br>g := make([][]edge, n)<br>for _, e := range edges {<br>x, y, wt := e[0], e[1], e[2]<br>g[x] = append(g[x], edge{y, wt})<br>g[y] = append(g[y], edge{x, wt})<br>}<br>const mx = 17 // bits.Len(uint(n))<br>pa := make([][mx]int, n)<br>dep := make([]int, n)<br>dis := make([]int, n) // 如果是无权树（边权为 1），dis 可以去掉，用 dep 代替<br>var dfs func(int, int)<br>dfs = func(x, p int) {<br>pa[x][0] = p<br>for _, e := range g[x] {<br>y := e.to<br>if y == p {<br>continue<br>}<br>dep[y] = dep[x] + 1<br>dis[y] = dis[x] + e.wt<br>dfs(y, x)<br>}<br>}<br>dfs(0, -1)<br>for i := range mx - 1 {<br>for x := range pa {<br>p := pa[x][i]<br>if p != -1 {<br>pa[x][i+1] = pa[p][i]<br>} else {<br>pa[x][i+1] = -1<br>}<br>}<br>}<br>uptoDep := func(x, d int) int {<br>for k := uint(dep[x] - d); k > 0; k &= k - 1 {<br>x = pa[x][bits.TrailingZeros(k)]<br>}<br>return x<br>}<br>// 返回 x 和 y 的最近公共祖先（节点编号从 0 开始）<br>getLCA := func(x, y int) int {<br>if dep[x] > dep[y] {<br>x, y = y, x<br>}<br>y = uptoDep(y, dep[x]) // 使 y 和 x 在同一深度<br>if y == x {<br>return x<br>}<br>for i := mx - 1; i >= 0; i-- {<br>px, py := pa[x][i], pa[y][i]<br>if px != py {<br>x, y = px, py // 同时往上跳 2^i 步<br>}<br>}<br>return pa[x][0]<br>}<br>// 返回 x 到 y 的距离（最短路长度）<br>getDis := func(x, y int) int { return dis[x] + dis[y] - dis[getLCA(x, y)]*2 }<br>// 以上是 LCA 模板<br>ans := make([]int, len(queries))<br>for i, q := range queries {<br>// ...<br>}<br>return ans<br>}<br>```<br>**数组上的倍增**：<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "1483. 树节点的第 K 个祖先",
                                    "summary": "",
                                    "src": "/kth-ancestor-of-a-tree-node/",
                                    "original_src": "https://leetcode.cn/problems/kth-ancestor-of-a-tree-node/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2115.0911494487,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3559. 给边赋权值的方案数 II",
                                    "summary": "",
                                    "src": "/number-of-ways-to-assign-edge-weights-ii/",
                                    "original_src": "https://leetcode.cn/problems/number-of-ways-to-assign-edge-weights-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2146.2256599416,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3553. 包含给定路径的最小带权子树 II",
                                    "summary": "",
                                    "src": "/minimum-weighted-subgraph-with-the-required-paths-ii/",
                                    "original_src": "https://leetcode.cn/problems/minimum-weighted-subgraph-with-the-required-paths-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2410.8337079997,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3585. 树中找到带权中位节点",
                                    "summary": "",
                                    "src": "/find-weighted-median-node-in-tree/",
                                    "original_src": "https://leetcode.cn/problems/find-weighted-median-node-in-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2428.6733108929,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2846. 边权重均等查询",
                                    "summary": "",
                                    "src": "/minimum-edge-weight-equilibrium-queries-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/minimum-edge-weight-equilibrium-queries-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2507.9960044659,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2646. 最小化旅行的价格总和",
                                    "summary": "",
                                    "src": "/minimize-the-total-price-of-the-trips/",
                                    "original_src": "https://leetcode.cn/problems/minimize-the-total-price-of-the-trips/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2238.2830745228,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2277. 树中最接近路径的节点",
                                    "summary": "",
                                    "src": "/closest-node-to-path-in-tree/",
                                    "original_src": "https://leetcode.cn/problems/closest-node-to-path-in-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "3534. 针对图的路径存在性查询 II",
                                    "summary": "",
                                    "src": "/path-existence-queries-in-a-graph-ii/",
                                    "original_src": "https://leetcode.cn/problems/path-existence-queries-in-a-graph-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2507.1382215756,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2836. 在传球游戏中最大化函数值",
                                    "summary": "",
                                    "src": "/maximize-value-of-function-in-a-ball-passing-game",
                                    "original_src": "https://leetcode.cn/problems/maximize-value-of-function-in-a-ball-passing-game",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2768.8154223451,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3464. 正方形上的点之间的最大距离",
                                    "summary": "",
                                    "src": "/maximize-the-distance-between-points-on-a-square/",
                                    "original_src": "https://leetcode.cn/problems/maximize-the-distance-between-points-on-a-square/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2805.990278358,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.9 树上滑动窗口",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3425. 最长特殊路径",
                                    "summary": "",
                                    "src": "/longest-special-path/",
                                    "original_src": "https://leetcode.cn/problems/longest-special-path/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2434.6549114916,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3486. 最长特殊路径 II",
                                    "summary": "",
                                    "src": "/longest-special-path-ii/",
                                    "original_src": "https://leetcode.cn/problems/longest-special-path-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2924.5453871317,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.10 树上启发式合并",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2003. 每棵子树内缺失的最小基因值",
                                    "summary": "",
                                    "src": "/smallest-missing-genetic-value-in-each-subtree/",
                                    "original_src": "https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2415.0089731911,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3590. 第 K 小的路径异或和",
                                    "summary": "",
                                    "src": "/kth-smallest-path-xor-sum/",
                                    "original_src": "https://leetcode.cn/problems/kth-smallest-path-xor-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2645.836955523,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3575. 最大好子树分数",
                                    "summary": "",
                                    "src": "/maximum-good-subtree-score/",
                                    "original_src": "https://leetcode.cn/problems/maximum-good-subtree-score/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2359.6837796886,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.11 点分治",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3372. 连接两棵树后最大目标节点数目 I",
                                    "summary": "",
                                    "src": "/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
                                    "original_src": "https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1926.7598451706,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§3.12 其他",
                            "summary": "另见 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的「**树形 DP**」，包含换根 DP。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "2867. 统计树中的合法路径数目",
                                    "summary": "",
                                    "src": "/count-valid-paths-in-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/count-valid-paths-in-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2428.3242593838,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2421. 好路径的数目",
                                    "summary": "",
                                    "src": "/number-of-good-paths/",
                                    "original_src": "https://leetcode.cn/problems/number-of-good-paths/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2444.6660756903,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1719. 重构一棵树的方案数",
                                    "summary": "",
                                    "src": "/number-of-ways-to-reconstruct-a-tree/",
                                    "original_src": "https://leetcode.cn/problems/number-of-ways-to-reconstruct-a-tree/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 3018.4940165727,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2479. 两个不重叠子树的最大异或值",
                                    "summary": "",
                                    "src": "/maximum-xor-of-two-non-overlapping-subtrees/",
                                    "original_src": "https://leetcode.cn/problems/maximum-xor-of-two-non-overlapping-subtrees/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        }
                    ],
                    "isPremium": false,
                    "last_update": ""
                },
                {
                    "title": "四、回溯",
                    "summary": "本质是搜索树上的 DFS。<br>推荐先完成 **§2.7** 节。先理解二叉树上的回溯，再来学习一般情况下的回溯。<br>",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [],
                    "nonLeafChild": [
                        {
                            "title": "§4.1 入门回溯",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "17. 电话号码的字母组合",
                                    "summary": "",
                                    "src": "/letter-combinations-of-a-phone-number/",
                                    "original_src": "https://leetcode.cn/problems/letter-combinations-of-a-phone-number/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.2 子集型回溯",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>有「**选或不选**」和「**枚举选哪个**」两种写法。<br>也可以用**二进制枚举**做。<br>**思维扩展**：<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "78. 子集",
                                    "summary": "",
                                    "src": "/subsets/",
                                    "original_src": "https://leetcode.cn/problems/subsets/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1863. 找出所有子集的异或总和再求和",
                                    "summary": "",
                                    "src": "/sum-of-all-subset-xor-totals/",
                                    "original_src": "https://leetcode.cn/problems/sum-of-all-subset-xor-totals/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1372.1152262488,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "784. 字母大小写全排列",
                                    "summary": "",
                                    "src": "/letter-case-permutation/",
                                    "original_src": "https://leetcode.cn/problems/letter-case-permutation/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1341.5076441361,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3566. 等积子集的划分方案",
                                    "summary": "",
                                    "src": "/partition-array-into-two-equal-product-subsets/",
                                    "original_src": "https://leetcode.cn/problems/partition-array-into-two-equal-product-subsets/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1459.1307655664,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2044. 统计按位或能得到最大值的子集数目",
                                    "summary": "",
                                    "src": "/count-number-of-maximum-bitwise-or-subsets/",
                                    "original_src": "https://leetcode.cn/problems/count-number-of-maximum-bitwise-or-subsets/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1567.6884942977,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 51. 烹饪料理",
                                    "summary": "",
                                    "src": "/UEcfPD/",
                                    "original_src": "https://leetcode.cn/problems/UEcfPD/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2397. 被列覆盖的最多行数",
                                    "summary": "",
                                    "src": "/maximum-rows-covered-by-columns/",
                                    "original_src": "https://leetcode.cn/problems/maximum-rows-covered-by-columns/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1718.8256321624,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1239. 串联字符串的最大长度",
                                    "summary": "",
                                    "src": "/maximum-length-of-a-concatenated-string-with-unique-characters/",
                                    "original_src": "https://leetcode.cn/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1719.945199874,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2212. 射箭比赛中的最大得分",
                                    "summary": "",
                                    "src": "/maximum-points-in-an-archery-competition/",
                                    "original_src": "https://leetcode.cn/problems/maximum-points-in-an-archery-competition/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1868.9864493463,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1255. 得分最高的单词集合",
                                    "summary": "",
                                    "src": "/maximum-score-words-formed-by-letters/",
                                    "original_src": "https://leetcode.cn/problems/maximum-score-words-formed-by-letters/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1881.6810367589,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2151. 基于陈述统计最多好人数",
                                    "summary": "",
                                    "src": "/maximum-good-people-based-on-statements/",
                                    "original_src": "https://leetcode.cn/problems/maximum-good-people-based-on-statements/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1979.9454101467,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2597. 美丽子集的数目",
                                    "summary": "",
                                    "src": "/the-number-of-beautiful-subsets/",
                                    "original_src": "https://leetcode.cn/problems/the-number-of-beautiful-subsets/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2023.4303440211,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2959. 关闭分部的可行集合数目",
                                    "summary": "",
                                    "src": "/number-of-possible-sets-of-closing-branches/",
                                    "original_src": "https://leetcode.cn/problems/number-of-possible-sets-of-closing-branches/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2077.4738459704,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1601. 最多可达成的换楼请求数目",
                                    "summary": "",
                                    "src": "/maximum-number-of-achievable-transfer-requests/",
                                    "original_src": "https://leetcode.cn/problems/maximum-number-of-achievable-transfer-requests/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2118.7923652824,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1617. 统计子树中城市之间最大距离",
                                    "summary": "",
                                    "src": "/count-subtrees-with-max-distance-between-cities/",
                                    "original_src": "https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2308.6545905335,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2174. 通过翻转行或列来去除所有的 1 II",
                                    "summary": "",
                                    "src": "/remove-all-ones-with-row-and-column-flips-ii/",
                                    "original_src": "https://leetcode.cn/problems/remove-all-ones-with-row-and-column-flips-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "320. 列举单词的全部缩写",
                                    "summary": "",
                                    "src": "/generalized-abbreviation/",
                                    "original_src": "https://leetcode.cn/problems/generalized-abbreviation/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "254. 因子的组合",
                                    "summary": "",
                                    "src": "/factor-combinations/",
                                    "original_src": "https://leetcode.cn/problems/factor-combinations/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "39. 组合总和",
                                    "summary": "",
                                    "src": "/combination-sum/",
                                    "original_src": "https://leetcode.cn/problems/combination-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2002. 两个回文子序列长度的最大乘积",
                                    "summary": "",
                                    "src": "/maximum-product-of-the-length-of-two-palindromic-subsequences/",
                                    "original_src": "https://leetcode.cn/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1869.402439128,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.3 划分型回溯",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>把分割线（逗号）看成是可以「选或不选」的东西，本质是子集型回溯。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "131. 分割回文串",
                                    "summary": "",
                                    "src": "/palindrome-partitioning/",
                                    "original_src": "https://leetcode.cn/problems/palindrome-partitioning/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2698. 求一个整数的惩罚数",
                                    "summary": "",
                                    "src": "/find-the-punishment-number-of-an-integer/",
                                    "original_src": "https://leetcode.cn/problems/find-the-punishment-number-of-an-integer/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1678.6245760413,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1593. 拆分字符串使唯一子字符串的数目最大",
                                    "summary": "",
                                    "src": "/split-a-string-into-the-max-number-of-unique-substrings/",
                                    "original_src": "https://leetcode.cn/problems/split-a-string-into-the-max-number-of-unique-substrings/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1739.5831401172,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1849. 将字符串拆分为递减的连续值",
                                    "summary": "",
                                    "src": "/splitting-a-string-into-descending-consecutive-values/",
                                    "original_src": "https://leetcode.cn/problems/splitting-a-string-into-descending-consecutive-values/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1746.8757919578,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "306. 累加数",
                                    "summary": "",
                                    "src": "/additive-number/",
                                    "original_src": "https://leetcode.cn/problems/additive-number/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "842. 将数组拆分成斐波那契序列",
                                    "summary": "",
                                    "src": "/split-array-into-fibonacci-sequence/",
                                    "original_src": "https://leetcode.cn/problems/split-array-into-fibonacci-sequence/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1779.9495819318,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "93. 复原 IP 地址",
                                    "summary": "",
                                    "src": "/restore-ip-addresses/",
                                    "original_src": "https://leetcode.cn/problems/restore-ip-addresses/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "140. 单词拆分 II",
                                    "summary": "",
                                    "src": "/word-break-ii/",
                                    "original_src": "https://leetcode.cn/problems/word-break-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "291. 单词规律 II",
                                    "summary": "",
                                    "src": "/word-pattern-ii/",
                                    "original_src": "https://leetcode.cn/problems/word-pattern-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.4 组合型回溯",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1xG4y1F7nC/\">视频讲解【基础算法精讲 15】</a><br>有个数上的约束。也算作子集型回溯。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "77. 组合",
                                    "summary": "",
                                    "src": "/combinations/",
                                    "original_src": "https://leetcode.cn/problems/combinations/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "216. 组合总和 III",
                                    "summary": "",
                                    "src": "/combination-sum-iii/",
                                    "original_src": "https://leetcode.cn/problems/combination-sum-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1286. 字母组合迭代器",
                                    "summary": "",
                                    "src": "/iterator-for-combination/",
                                    "original_src": "https://leetcode.cn/problems/iterator-for-combination/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1591.4725328821,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "22. 括号生成",
                                    "summary": "",
                                    "src": "/generate-parentheses/",
                                    "original_src": "https://leetcode.cn/problems/generate-parentheses/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "301. 删除无效的括号",
                                    "summary": "",
                                    "src": "/remove-invalid-parentheses/",
                                    "original_src": "https://leetcode.cn/problems/remove-invalid-parentheses/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.5 排列型回溯",
                            "summary": "<a href=\"https://www.bilibili.com/video/BV1mY411D7f6/\">视频讲解【基础算法精讲 16】</a><br>部分题目也可以用状压 DP 做。<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "46. 全排列",
                                    "summary": "",
                                    "src": "/permutations/",
                                    "original_src": "https://leetcode.cn/problems/permutations/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3376. 破解锁的最少时间 I",
                                    "summary": "",
                                    "src": "/minimum-time-to-break-locks-i/",
                                    "original_src": "https://leetcode.cn/problems/minimum-time-to-break-locks-i/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1793.2112436729,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "51. N 皇后",
                                    "summary": "",
                                    "src": "/n-queens/",
                                    "original_src": "https://leetcode.cn/problems/n-queens/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "52. N 皇后 II",
                                    "summary": "",
                                    "src": "/n-queens-ii/",
                                    "original_src": "https://leetcode.cn/problems/n-queens-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2850. 将石头分散到网格图的最少移动次数",
                                    "summary": "",
                                    "src": "/minimum-moves-to-spread-stones-over-grid/",
                                    "original_src": "https://leetcode.cn/problems/minimum-moves-to-spread-stones-over-grid/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2001.4515854273,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1718. 构建字典序最大的可行序列",
                                    "summary": "",
                                    "src": "/construct-the-lexicographically-largest-valid-sequence/",
                                    "original_src": "https://leetcode.cn/problems/construct-the-lexicographically-largest-valid-sequence/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2080.0425875741,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1307. 口算难题",
                                    "summary": "",
                                    "src": "/verbal-arithmetic-puzzle/",
                                    "original_src": "https://leetcode.cn/problems/verbal-arithmetic-puzzle/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2250.0454791316,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "37. 解数独",
                                    "summary": "",
                                    "src": "/sudoku-solver/",
                                    "original_src": "https://leetcode.cn/problems/sudoku-solver/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3437. 全排列 III",
                                    "summary": "",
                                    "src": "/permutations-iii/",
                                    "original_src": "https://leetcode.cn/problems/permutations-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "267. 回文排列 II",
                                    "summary": "",
                                    "src": "/palindrome-permutation-ii/",
                                    "original_src": "https://leetcode.cn/problems/palindrome-permutation-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.6 有重复元素的回溯",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "90. 子集 II",
                                    "summary": "",
                                    "src": "/subsets-ii/",
                                    "original_src": "https://leetcode.cn/problems/subsets-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "40. 组合总和 II",
                                    "summary": "",
                                    "src": "/combination-sum-ii/",
                                    "original_src": "https://leetcode.cn/problems/combination-sum-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "491. 非递减子序列",
                                    "summary": "",
                                    "src": "/non-decreasing-subsequences/",
                                    "original_src": "https://leetcode.cn/problems/non-decreasing-subsequences/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "47. 全排列 II",
                                    "summary": "",
                                    "src": "/permutations-ii/",
                                    "original_src": "https://leetcode.cn/problems/permutations-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1079. 活字印刷",
                                    "summary": "",
                                    "src": "/letter-tile-possibilities/",
                                    "original_src": "https://leetcode.cn/problems/letter-tile-possibilities/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1740.5014205942,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3646. 下一个特殊回文数",
                                    "summary": "",
                                    "src": "/next-special-palindrome-number/",
                                    "original_src": "https://leetcode.cn/problems/next-special-palindrome-number/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2445.0201515301,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2014. 重复 K 次的最长子序列",
                                    "summary": "",
                                    "src": "/longest-subsequence-repeated-k-times/",
                                    "original_src": "https://leetcode.cn/problems/longest-subsequence-repeated-k-times/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2558.3297484354,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.7 搜索",
                            "summary": "",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "3211. 生成不含相邻零的二进制字符串",
                                    "summary": "",
                                    "src": "/generate-binary-strings-without-adjacent-zeros/",
                                    "original_src": "https://leetcode.cn/problems/generate-binary-strings-without-adjacent-zeros/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1352.5455214631,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "967. 连续差相同的数字",
                                    "summary": "",
                                    "src": "/numbers-with-same-consecutive-differences/",
                                    "original_src": "https://leetcode.cn/problems/numbers-with-same-consecutive-differences/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1432.9593207076,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2094. 找出 3 位偶数",
                                    "summary": "",
                                    "src": "/finding-3-digit-even-numbers/",
                                    "original_src": "https://leetcode.cn/problems/finding-3-digit-even-numbers/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1454.7459647138,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1415. 长度为 n 的开心字符串中字典序第 k 小的字符串",
                                    "summary": "",
                                    "src": "/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/",
                                    "original_src": "https://leetcode.cn/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1575.6324598387,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1219. 黄金矿工",
                                    "summary": "",
                                    "src": "/path-with-maximum-gold/",
                                    "original_src": "https://leetcode.cn/problems/path-with-maximum-gold/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1663.2612318917,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "79. 单词搜索",
                                    "summary": "",
                                    "src": "/word-search/",
                                    "original_src": "https://leetcode.cn/problems/word-search/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "980. 不同路径 III",
                                    "summary": "",
                                    "src": "/unique-paths-iii/",
                                    "original_src": "https://leetcode.cn/problems/unique-paths-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1830.3165569278,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2002. 两个回文子序列长度的最大乘积",
                                    "summary": "",
                                    "src": "/maximum-product-of-the-length-of-two-palindromic-subsequences/",
                                    "original_src": "https://leetcode.cn/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1869.402439128,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1255. 得分最高的单词集合",
                                    "summary": "",
                                    "src": "/maximum-score-words-formed-by-letters/",
                                    "original_src": "https://leetcode.cn/problems/maximum-score-words-formed-by-letters/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1881.6810367589,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3669. K 因数分解",
                                    "summary": "",
                                    "src": "/balanced-k-factor-decomposition/",
                                    "original_src": "https://leetcode.cn/problems/balanced-k-factor-decomposition/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1917.0816751666,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "473. 火柴拼正方形",
                                    "summary": "",
                                    "src": "/matchsticks-to-square/",
                                    "original_src": "https://leetcode.cn/problems/matchsticks-to-square/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "212. 单词搜索 II",
                                    "summary": "",
                                    "src": "/word-search-ii/",
                                    "original_src": "https://leetcode.cn/problems/word-search-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "638. 大礼包",
                                    "summary": "",
                                    "src": "/shopping-offers/",
                                    "original_src": "https://leetcode.cn/problems/shopping-offers/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1240. 铺瓷砖",
                                    "summary": "",
                                    "src": "/tiling-a-rectangle-with-the-fewest-squares/",
                                    "original_src": "https://leetcode.cn/problems/tiling-a-rectangle-with-the-fewest-squares/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2241.5199974312,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "679. 24 点游戏",
                                    "summary": "",
                                    "src": "/24-game/",
                                    "original_src": "https://leetcode.cn/problems/24-game/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "282. 给表达式添加运算符",
                                    "summary": "",
                                    "src": "/expression-add-operators/",
                                    "original_src": "https://leetcode.cn/problems/expression-add-operators/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "126. 单词接龙 II",
                                    "summary": "",
                                    "src": "/word-ladder-ii/",
                                    "original_src": "https://leetcode.cn/problems/word-ladder-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "691. 贴纸拼词",
                                    "summary": "",
                                    "src": "/stickers-to-spell-word/",
                                    "original_src": "https://leetcode.cn/problems/stickers-to-spell-word/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2056. 棋盘上有效移动组合的数目",
                                    "summary": "",
                                    "src": "/number-of-valid-move-combinations-on-chessboard/",
                                    "original_src": "https://leetcode.cn/problems/number-of-valid-move-combinations-on-chessboard/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2610.9906730644,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2386. 找出数组的第 K 大和",
                                    "summary": "",
                                    "src": "/find-the-k-sum-of-an-array/",
                                    "original_src": "https://leetcode.cn/problems/find-the-k-sum-of-an-array/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2647.8258771458,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3509. 最大化交错和为 K 的子序列乘积",
                                    "summary": "",
                                    "src": "/maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k/",
                                    "original_src": "https://leetcode.cn/problems/maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2702.6772838353,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "488. 祖玛游戏",
                                    "summary": "",
                                    "src": "/zuma-game/",
                                    "original_src": "https://leetcode.cn/problems/zuma-game/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 58. 积木拼接",
                                    "summary": "",
                                    "src": "/De4qBB/",
                                    "original_src": "https://leetcode.cn/problems/De4qBB/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "面试题 17.25. 单词矩阵",
                                    "summary": "",
                                    "src": "/word-rectangle-lcci/",
                                    "original_src": "https://leetcode.cn/problems/word-rectangle-lcci/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2664. 巡逻的骑士",
                                    "summary": "",
                                    "src": "/the-knights-tour/",
                                    "original_src": "https://leetcode.cn/problems/the-knights-tour/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "3565. 顺序网格路径覆盖",
                                    "summary": "",
                                    "src": "/sequential-grid-path-cover/",
                                    "original_src": "https://leetcode.cn/problems/sequential-grid-path-cover/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "247. 中心对称数 II",
                                    "summary": "",
                                    "src": "/strobogrammatic-number-ii/",
                                    "original_src": "https://leetcode.cn/problems/strobogrammatic-number-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "248. 中心对称数 III",
                                    "summary": "",
                                    "src": "/strobogrammatic-number-iii/",
                                    "original_src": "https://leetcode.cn/problems/strobogrammatic-number-iii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "411. 最短独占单词缩写",
                                    "summary": "",
                                    "src": "/minimum-unique-word-abbreviation/",
                                    "original_src": "https://leetcode.cn/problems/minimum-unique-word-abbreviation/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                },
                                {
                                    "title": "1088. 易混淆数 II",
                                    "summary": "",
                                    "src": "/confusing-number-ii/",
                                    "original_src": "https://leetcode.cn/problems/confusing-number-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2076.8975497986,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": true,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "§4.8 折半枚举",
                            "summary": "英文名 meet in the middle。<br><a href=\"https://leetcode.cn/problems/target-sum/solutions/2119041/jiao-ni-yi-bu-bu-si-kao-dong-tai-gui-hua-s1cx/\">讲解</a>（见文末）<br>",
                            "src": "",
                            "original_src": "",
                            "sort": 0,
                            "isLeaf": false,
                            "solution": "",
                            "score": 0,
                            "leafChild": [
                                {
                                    "title": "805. 数组的均值分割",
                                    "summary": "",
                                    "src": "/split-array-with-same-average/",
                                    "original_src": "https://leetcode.cn/problems/split-array-with-same-average/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1982.5085994817,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "494. 目标和",
                                    "summary": "",
                                    "src": "/target-sum/",
                                    "original_src": "https://leetcode.cn/problems/target-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3566. 等积子集的划分方案",
                                    "summary": "",
                                    "src": "/partition-array-into-two-equal-product-subsets/",
                                    "original_src": "https://leetcode.cn/problems/partition-array-into-two-equal-product-subsets/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 1459.1307655664,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "1755. 最接近目标值的子序列和",
                                    "summary": "",
                                    "src": "/closest-subsequence-sum/",
                                    "original_src": "https://leetcode.cn/problems/closest-subsequence-sum/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2363.5096568214,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "956. 最高的广告牌",
                                    "summary": "",
                                    "src": "/tallest-billboard/",
                                    "original_src": "https://leetcode.cn/problems/tallest-billboard/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2381.479024858,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "2035. 将数组分成两个数组并最小化数组和的差",
                                    "summary": "",
                                    "src": "/partition-array-into-two-arrays-to-minimize-sum-difference/",
                                    "original_src": "https://leetcode.cn/problems/partition-array-into-two-arrays-to-minimize-sum-difference/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2489.6652421066,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "3267. 统计近似相等数对 II",
                                    "summary": "",
                                    "src": "/count-almost-equal-pairs-ii/",
                                    "original_src": "https://leetcode.cn/problems/count-almost-equal-pairs-ii/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": 2545.1080433595,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                },
                                {
                                    "title": "LCP 82. 万灵之树",
                                    "summary": "",
                                    "src": "/cnHoX6/",
                                    "original_src": "https://leetcode.cn/problems/cnHoX6/",
                                    "sort": 0,
                                    "isLeaf": true,
                                    "solution": null,
                                    "score": null,
                                    "leafChild": [],
                                    "nonLeafChild": [],
                                    "isPremium": false,
                                    "last_update": ""
                                }
                            ],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        }
                    ],
                    "isPremium": false,
                    "last_update": ""
                },
                {
                    "title": "五、其他递归/分治",
                    "summary": "",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [
                        {
                            "title": "3537. 填充特殊网格",
                            "summary": "",
                            "src": "/fill-a-special-grid/",
                            "original_src": "https://leetcode.cn/problems/fill-a-special-grid/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 1541.5352218724,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "880. 索引处的解码字符串",
                            "summary": "",
                            "src": "/decoded-string-at-index/",
                            "original_src": "https://leetcode.cn/problems/decoded-string-at-index/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 2010.5524756946,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "3307. 找出第 K 个字符 II",
                            "summary": "",
                            "src": "/find-the-k-th-character-in-string-game-ii/",
                            "original_src": "https://leetcode.cn/problems/find-the-k-th-character-in-string-game-ii/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 2232.067965725,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "1545. 找出第 N 个二进制字符串中的第 K 位",
                            "summary": "",
                            "src": "/find-kth-bit-in-nth-binary-string/",
                            "original_src": "https://leetcode.cn/problems/find-kth-bit-in-nth-binary-string/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 1479.4837595809,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "3614. 用特殊操作处理字符串 II",
                            "summary": "",
                            "src": "/process-string-with-special-operations-ii/",
                            "original_src": "https://leetcode.cn/problems/process-string-with-special-operations-ii/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 2010.6191768155,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        },
                        {
                            "title": "932. 漂亮数组",
                            "summary": "",
                            "src": "/beautiful-array/",
                            "original_src": "https://leetcode.cn/problems/beautiful-array/",
                            "sort": 0,
                            "isLeaf": true,
                            "solution": null,
                            "score": 2294.0981174197,
                            "leafChild": [],
                            "nonLeafChild": [],
                            "isPremium": false,
                            "last_update": ""
                        }
                    ],
                    "nonLeafChild": [],
                    "isPremium": false,
                    "last_update": ""
                },
                {
                    "title": "算法题单",
                    "summary": "<a href=\"https://leetcode.cn/circle/discuss/RvFUtj/\">如何科学刷题？</a><br>1. <a href=\"/lc-rating/list/sliding_window\">滑动窗口与双指针（定长/不定长/单序列/双序列/三指针/分组循环）</a><br>2. <a href=\"/lc-rating/list/binary_search\">二分算法（二分答案/最小化最大值/最大化最小值/第K小）</a><br>3. <a href=\"/lc-rating/list/monotonic_stack\">单调栈（基础/矩形面积/贡献法/最小字典序）</a><br>4. <a href=\"/lc-rating/list/grid\">网格图（DFS/BFS/综合应用）</a><br>5. <a href=\"/lc-rating/list/bitwise_operations\">位运算（基础/性质/拆位/试填/恒等式/思维）</a><br>6. <a href=\"/lc-rating/list/graph\">图论算法（DFS/BFS/拓扑排序/基环树/最短路/最小生成树/网络流）</a><br>7. <a href=\"/lc-rating/list/dynamic_programming\">动态规划（入门/背包/划分/状态机/区间/状压/数位/数据结构优化/树形/博弈/概率期望）</a><br>8. <a href=\"/lc-rating/list/data_structure\">常用数据结构（前缀和/差分/栈/队列/堆/字典树/并查集/树状数组/线段树）</a><br>9. <a href=\"/lc-rating/list/math\">数学算法（数论/组合/概率期望/博弈/计算几何/随机算法）</a><br>10. <a href=\"/lc-rating/list/greedy\">贪心与思维（基本贪心策略/反悔/区间/字典序/数学/思维/脑筋急转弯/构造）</a><br>11. <a href=\"/lc-rating/list/trees\">链表、二叉树与回溯（前后指针/快慢指针/DFS/BFS/直径/LCA/一般树）</a><br>12. <a href=\"/lc-rating/list/string\">字符串（KMP/Z函数/Manacher/字符串哈希/AC自动机/后缀数组/子序列自动机）</a><br><a href=\"https://github.com/EndlessCheng/codeforces-go/blob/master/leetcode/SOLUTIONS.md\">我的题解精选（已分类）</a><br>欢迎关注 <a href=\"https://space.bilibili.com/206214\">B站@灵茶山艾府</a><br>如果你发现有题目可以补充进来，欢迎评论反馈。<br>",
                    "src": "",
                    "original_src": "",
                    "sort": 0,
                    "isLeaf": false,
                    "solution": "",
                    "score": 0,
                    "leafChild": [],
                    "nonLeafChild": [],
                    "isPremium": false,
                    "last_update": ""
                }
            ],
            "isPremium": false,
            "last_update": ""
        }
    ],
    "isPremium": false,
    "last_update": "2025-09-24 07:58:35"
} as ProblemCategory;